% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prediction_functions.R
\name{run_abm_simulation_grf}
\alias{run_abm_simulation_grf}
\title{Simulate karyotype dynamics in a Gaussian‑Random‑Field (GRF) fitness landscape}
\usage{
run_abm_simulation_grf(
  centroids,
  lambda,
  p,
  times,
  x0,
  abm_pop_size = 10000,
  abm_delta_t = 0.1,
  abm_max_pop = 1e+07,
  abm_culling_survival = 0.1,
  abm_record_interval = 10,
  abm_seed = -1,
  normalize_freq = T
)
}
\arguments{
\item{centroids}{Numeric matrix with one centroid per \strong{row}
(dimensions \emph{n_centroids × K}), where \emph{K} is the number of
chromosome types.}

\item{lambda}{Positive scalar. The GRF wavelength λ; smaller values give
a more rugged landscape.}

\item{p}{Missegregation probability (0 ≤ \code{p} ≤ 1).}

\item{times}{Numeric vector of time points to sample.}

\item{x0}{\strong{Named} numeric vector of initial karyotype frequencies
(must sum to 1).  The names must be karyotype strings of length \emph{K}
matching the dimension of \code{centroids}.}

\item{abm_pop_size}{Initial total population size.}

\item{abm_delta_t}{Duration of one ABM step.}

\item{abm_max_pop}{Carrying capacity. Use \code{<= 0} for unlimited.}

\item{abm_culling_survival}{Fraction of cells retained when the population
exceeds \code{abm_max_pop}.}

\item{abm_record_interval}{Record population state every N steps. If a negative value
is provided, then population is recorded every passage.}

\item{abm_seed}{RNG seed.  Use \code{-1} for a random seed.}

\item{normalize_freq}{Should ABM counts be normalized to frequencies?}
}
\value{
A \strong{wide data‑frame}: first column \code{time}, remaining columns
one per karyotype, giving relative frequencies at each sampled time.
}
\description{
This function runs the C++ agent‑based model (\code{run_karyotype_abm}) in
\strong{GRF mode}: fitness values are generated on‑the‑fly from a set of
centroid points and a wavelength λ, instead of using a lookup table.
}
\examples{
# Two‑chromosome example with 4 centroids
cents <- matrix(c(2,2,
                  3,1,
                  1,3,
                  4,4), ncol = 2, byrow = TRUE)
init  <- c("2.2" = 1)        # start at (2,2)
times <- seq(0, 5, by = 1)

sim <- run_abm_simulation_grf(
  centroids = cents, lambda = 2,
  p = 0.02, times = times, x0 = init,
  abm_pop_size = 5e3, abm_delta_t = 0.05,
  abm_record_interval = 20, abm_seed = 42
)
head(sim)

}
