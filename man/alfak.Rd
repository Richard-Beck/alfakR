% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ALFA-K.R
\name{alfak}
\alias{alfak}
\title{ALFAK: Adaptive Landscape Fitness Inference from Karyotype Dynamics}
\usage{
alfak(
  yi,
  outdir,
  passage_times,
  minobs = 20,
  nboot = 45,
  n0 = 1e+05,
  nb = 1e+07,
  pm = 5e-05
)
}
\arguments{
\item{yi}{A list containing the input data. Expected elements:
\itemize{
\item \code{x}: A matrix of karyotype counts (rows are karyotypes as strings
like "2.2.1", columns are timepoints). Rownames should be present.
Colnames should represent time values that can be multiplied by \code{dt}.
\item \code{dt}: A numeric value representing the scaling factor for timepoints
(e.g., generation time if colnames of \code{x} are generations).
}}

\item{outdir}{A string specifying the directory path where result files
(RDS format) will be saved. The directory will be created if it doesn't exist.}

\item{passage_times}{An optional numeric vector of passage times. If \code{NULL},
calculated from \code{colnames(yi$x) * yi$dt}.}

\item{minobs}{An integer, the minimum total number of observations (reads/counts)
for a karyotype across all timepoints to be considered "frequent" and included
in the analysis. Default is 20.}

\item{nboot}{An integer, the number of bootstrap iterations for fitness
estimation and for the Kriging process in \code{fitKrig}. Default is 45.}

\item{n0}{A numeric value, the initial effective population size at the
start of a passage or growth phase, used for g0 calculation. Default is 1e5.}

\item{nb}{A numeric value, the bottleneck effective population size (population
size after transfer), used for g0 calculation. Default is 1e7.}

\item{pm}{A numeric value, the per-locus mutation/error rate used in \code{pij}
calculations. Default is 0.00005.}
}
\value{
Returns the cross-validation R-squared value (\code{Rxv}) invisibly.
The function primarily saves its results to RDS files in the \code{outdir}:
\itemize{
\item \code{bootstrap_res.Rds}: Results from \code{solve_fitness_bootstrap}.
\item \code{landscape.Rds}: Summary statistics (mean, median, sd) of the
Kriging-inferred fitness landscape from \code{fitKrig}.
\item \code{landscape_posterior_samples.Rds}: The full matrix of posterior
samples from the Kriging bootstraps in \code{fitKrig}.
\item \code{xval.Rds}: The cross-validation R-squared value (\code{Rxv}).
}
}
\description{
Performs fitness landscape inference using Allele Frequency Karyotype dynamics.
This function estimates fitness values for observed karyotypes and their
neighbors, performs Kriging to create a fitness landscape, and evaluates
the landscape using cross-validation.
}
\examples{
\dontrun{
# Create dummy data for yi
karyotypes_str <- c("2.2.2", "2.2.1", "2.1.2", "1.2.2", "2.2.3")
timepoints_num <- 5
counts_data <- matrix(
  abs(rpois(length(karyotypes_str) * timepoints_num, lambda = 20)), # Use pois for counts
  nrow = length(karyotypes_str),
  ncol = timepoints_num
)
rownames(counts_data) <- karyotypes_str
colnames(counts_data) <- 1:timepoints_num # Generations

dummy_yi_data <- list(
  x = counts_data,
  dt = 1 # dt = 1 if colnames are generations
)

temp_output_dir <- tempfile("alfak_example_")

# Run alfak
result_r_squared <- alfak(
  yi = dummy_yi_data,
  outdir = temp_output_dir,
  passage_times = NULL,
  minobs = 5,      # Lowered for dummy data
  nboot = 10,      # Lowered for quick example
  n0 = 1e4,
  nb = 1e6,
  pm = 0.0001
)
print(paste("Cross-validation R-squared:", result_r_squared))

# Check for created files
list.files(temp_output_dir)

# Clean up
unlink(temp_output_dir, recursive = TRUE)
}
}
